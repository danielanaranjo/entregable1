{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\lipi y lala\\\\Documents\\\\CERTIFIED_TECH_DEVELOPER\\\\FRONT_III\\\\examen\\\\entregable-frontend-3-junio22\\\\src\\\\components\\\\Item.js\",\n    _s = $RefreshSig$();\n\n// El componente Item no tiene componentes hijos.\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\n// Maqueta de Item:\n//    h3\n//    p\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Item(props) {\n  _s();\n\n  const [cantidadStock, setCantidadStock] = useState(props.stocks);\n\n  function reducir() {\n    if (cantidadStock > 0) {\n      const cantidad = cantidadStock - 1;\n      setCantidadStock(cantidad);\n      props.contador();\n    } else {\n      setCantidadStock(\"agotado\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"producto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"  \", props.nombre, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", props.descri]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"stock \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: cantidadStock\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => reducir(),\n      children: \" COMPRAR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Item, \"16g3lgcYuhUXlQEwnPfiFGSSUtA=\");\n\n_c = Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"names":["useState","Item","props","cantidadStock","setCantidadStock","stocks","reducir","cantidad","contador","nombre","descri"],"sources":["D:/Users/lipi y lala/Documents/CERTIFIED_TECH_DEVELOPER/FRONT_III/examen/entregable-frontend-3-junio22/src/components/Item.js"],"sourcesContent":["\r\n// El componente Item no tiene componentes hijos.\r\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\r\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\r\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\r\n// Maqueta de Item:\r\n//    h3\r\n//    p\r\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\r\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\r\n\r\nimport { useState} from \"react\";\r\n\r\nexport default function Item(props) {\r\n\r\n  const [cantidadStock,setCantidadStock] = useState(props.stocks);\r\n\r\n  function reducir (){\r\n    \r\n    if(cantidadStock > 0 ){\r\n      const cantidad = cantidadStock - 1;\r\n      setCantidadStock(cantidad);\r\n      props.contador();\r\n    }else {\r\n      setCantidadStock(\"agotado\")\r\n    }\r\n\r\n  }\r\n  \r\n  return (\r\n    <div className='producto'>\r\n\r\n          <h3>  {props.nombre} </h3>\r\n          <p> {props.descri}</p>\r\n          <h5>stock <span>{cantidadStock}</span> </h5>\r\n          <button onClick={() => reducir() } > COMPRAR</button>\r\n\r\n      {/* maquetar Item aquí */}\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,QAAT,QAAwB,OAAxB;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;EAAA;;EAElC,MAAM,CAACC,aAAD,EAAeC,gBAAf,IAAmCJ,QAAQ,CAACE,KAAK,CAACG,MAAP,CAAjD;;EAEA,SAASC,OAAT,GAAmB;IAEjB,IAAGH,aAAa,GAAG,CAAnB,EAAsB;MACpB,MAAMI,QAAQ,GAAGJ,aAAa,GAAG,CAAjC;MACAC,gBAAgB,CAACG,QAAD,CAAhB;MACAL,KAAK,CAACM,QAAN;IACD,CAJD,MAIM;MACJJ,gBAAgB,CAAC,SAAD,CAAhB;IACD;EAEF;;EAED,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,wBAEM;MAAA,iBAAOF,KAAK,CAACO,MAAb;IAAA;MAAA;MAAA;MAAA;IAAA,QAFN,eAGM;MAAA,gBAAKP,KAAK,CAACQ,MAAX;IAAA;MAAA;MAAA;MAAA;IAAA,QAHN,eAIM;MAAA,kCAAU;QAAA,UAAOP;MAAP;QAAA;QAAA;QAAA;MAAA,QAAV;IAAA;MAAA;MAAA;MAAA;IAAA,QAJN,eAKM;MAAQ,OAAO,EAAE,MAAMG,OAAO,EAA9B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALN;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;GA3BuBL,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}